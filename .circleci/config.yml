#Copyright 2017 FairwindsOps Inc.
#
#Licensed under the Apache License, Version 2.0 (the “License”);
#you may not use this file except in compliance with the License.
#You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
#Unless required by applicable law or agreed to in writing, software
#distributed under the License is distributed on an “AS IS” BASIS,
#WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#See the License for the specific language governing permissions and
#limitations under the License.

version: 2.1

executors:
  python-3-6:
    docker:
      - image: circleci/python:3.6-stretch
  python-3-7:
    docker:
      - image: circleci/python:3.7-stretch
  python-3-8:
    docker:
      - image: circleci/python:3.8-buster
  vm:
    machine:
      enabled: true
      image: ubuntu-1604:202007-01
  darwin:
    macos:
      xcode: 11.3.0

jobs:
  build-3-6:
    executor: python-3-6
    working_directory: ~/reckoner
    steps:
      - run:
          name: Setup PATH to support pip user installs
          command: echo 'export PATH=$PATH:/home/circleci/.local/bin' >> $BASH_ENV
      - checkout
      - run:
          name: Unit Tests
          command: |
            pip install --user -r development-requirements.txt
            pip install --user -e .
            reckoner --version
            pytest
  build-3-7:
    executor: python-3-7
    working_directory: ~/reckoner
    steps:
      - run:
          name: Setup PATH to support pip user installs
          command: echo 'export PATH=$PATH:/home/circleci/.local/bin' >> $BASH_ENV
      - checkout
      - run:
          name: Unit Tests
          command: |
            pip install --user -r development-requirements.txt
            pip install --user -e .
            reckoner --version
            pytest --cov ./
            codecov
  build-3-8:
    executor: python-3-8
    working_directory: ~/reckoner
    steps:
      - run:
          name: Setup PATH to support pip user installs
          command: echo 'export PATH=$PATH:/home/circleci/.local/bin' >> $BASH_ENV
      - checkout
      - run:
          name: Unit Tests
          command: |
            pip install --user -r development-requirements.txt
            pip install --user -e .
            reckoner --version
            pytest --cov ./
            codecov
  release:
    executor: python-3-7
    environment:
      PYPI_USERNAME: ReactiveOps
      GITHUB_ORGANIZATION: $CIRCLE_PROJECT_USERNAME
      GITHUB_REPOSITORY: $CIRCLE_PROJECT_REPONAME
    working_directory: ~/reckoner
    steps:
      - checkout
      - run:
          name: init .pypirc
          command: |
            echo -e "[pypi]" >> ~/.pypirc
            echo -e "username = $PYPI_USERNAME" >> ~/.pypirc
            echo -e "password = $PYPI_PASSWORD" >> ~/.pypirc
      - run:
          name: package and upload
          command: |
            sudo pip install twine
            python setup.py sdist bdist_wheel
            twine upload dist/*
  compile:
    executor: python-3-7
    working_directory: ~/reckoner
    steps:
      - run:
          name: Setup PATH to support pip user installs
          command: echo 'export PATH=$PATH:/home/circleci/.local/bin' >> $BASH_ENV
      - checkout
      - run:
          name: build binary for linux
          command: |
            pip install --user pyinstaller setuptools-scm
            pip install --user .
            cd installer
            python -c 'from setuptools_scm import get_version; get_version(root="..", write_to="reckoner/version.txt")'
            pyinstaller --hidden-import='pkg_resources.py2_warn' --noconfirm --paths .:../ --onefile --add-data ../reckoner/version.txt:reckoner --add-data ../reckoner/assets/course.schema.json:reckoner/assets --name reckoner cli.py
      - run:
          name: persist binaries
          command: |
            sudo mkdir /tmp/binaries/
            sudo cp installer/dist/reckoner /tmp/binaries/reckoner-linux-amd64
      - persist_to_workspace:
          root: /tmp/binaries
          paths:
            - reckoner-linux-amd64
      - store_artifacts:
          path: installer/dist/reckoner
          destination: reckoner-linux-amd64
  compile-darwin:
    executor: darwin
    working_directory: ~/reckoner
    steps:
      - checkout
      - run:
          name: build binary for os x
          command: |
            echo "Setting Up environment"
            pip3 install pyinstaller setuptools-scm
            pip3 install .
            cd installer

            echo "Building the version.txt from git"
            python3 -c 'from setuptools_scm import get_version; get_version(root="..", write_to="reckoner/version.txt")'

            echo "Running the binary compiler"
            pyinstaller --hidden-import='pkg_resources.py2_warn' --noconfirm --paths .:../ --onefile --add-data ../reckoner/version.txt:reckoner --add-data ../reckoner/assets/course.schema.json:reckoner/assets --name reckoner cli.py

            echo "Running the new Binary"
            ./dist/reckoner version
      - run:
          name: persist binaries
          command: |
            sudo mkdir /tmp/binaries/
            sudo cp installer/dist/reckoner /tmp/binaries/reckoner-darwin
      - persist_to_workspace:
          root: /tmp/binaries
          paths:
            - reckoner-darwin
      - store_artifacts:
          path: installer/dist/reckoner
          destination: reckoner-darwin
  end-to-end-helmv2-12-0:
    executor: vm
    working_directory: ~/reckoner
    resource_class: medium
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/binaries
      - run:
          name: Setup Testing Environment
          command: "./end_to_end_testing/setup_helm2_12_0.sh"
      - run:
          name: Run end to end tests
          command: HELM_VERSION=2 "./end_to_end_testing/run_end_to_end.sh"
  end-to-end-helmv2:
    executor: vm
    working_directory: ~/reckoner
    resource_class: medium
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/binaries
      - run:
          name: Setup Testing Environment
          command: "./end_to_end_testing/setup_helm2.sh"
      - run:
          name: Run end to end tests
          command: HELM_VERSION=2 "./end_to_end_testing/run_end_to_end.sh"
  end-to-end-helmv3:
    executor: vm
    working_directory: ~/reckoner
    resource_class: medium
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/binaries
      - run:
          name: Setup Testing Environment
          command: "./end_to_end_testing/setup_helm3.sh"
      - run:
          name: Run end to end tests
          command: HELM_VERSION=3 "./end_to_end_testing/run_end_to_end.sh"
  publish-binaries:
    executor: python-3-7
    steps:
      - attach_workspace:
          at: /tmp/binaries
      - run:
          name: find release tag
          command: |
            release_id=$(curl -s -H "Authorization: token ${GITHUB_ACCESS_TOKEN}" -X GET https://api.github.com/repos/FairwindsOps/reckoner/releases/tags/${CIRCLE_TAG} | jq -e .id)
            echo "Found Release (${release_id})"
            echo "Posting Binaries to Release"

            for filename in /tmp/binaries/*; do
              publish_url="https://uploads.github.com/repos/FairwindsOps/reckoner/releases/${release_id}/assets?name=$(basename ${filename})"
              echo "Publishing ${filename} to ${publish_url}"
              curl \
                --fail \
                -H "Accept: application/json" \
                -H "Authorization: token ${GITHUB_ACCESS_TOKEN}" \
                -H "Content-Type: application/octet-stream" \
                --request POST \
                --data-binary @"${filename}" \
                ${publish_url}
            done

workflows:
  version: 2
  build:
    jobs:
      - build-3-6:
          filters:
            tags:
              only: /.*/
            branches:
              only: /.*/
      - build-3-7:
          filters:
            tags:
              only: /.*/
            branches:
              only: /.*/
      - build-3-8:
          filters:
            tags:
              only: /.*/
            branches:
              only: /.*/
      - compile-darwin:
          requires:
            - build-3-6
            - build-3-7
            - build-3-8
          filters:
            tags:
              only: /.*/
            branches:
              only: /.*/
      - compile:
          requires:
            - build-3-6
            - build-3-7
            - build-3-8
          filters:
            tags:
              only: /.*/
            branches:
              only: /.*/
      - end-to-end-helmv2-12-0:
          requires:
            - compile
            - compile-darwin
          filters:
            tags:
              only: /.*/
            branches:
              only: /.*/
      - end-to-end-helmv2:
          requires:
            - compile
            - compile-darwin
          filters:
            tags:
              only: /.*/
            branches:
              only: /.*/
      - end-to-end-helmv3:
          requires:
            - compile
            - compile-darwin
          filters:
            tags:
              only: /.*/
            branches:
              only: /.*/
      - release:
          requires:
            - end-to-end-helmv2
            - end-to-end-helmv2-12-0
            - end-to-end-helmv3
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /.*/
      - publish-binaries:
          requires:
            - release
            - end-to-end-helmv2
            - end-to-end-helmv2-12-0
            - end-to-end-helmv3
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /.*/

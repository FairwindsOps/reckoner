---
# Source: aws-iam-authenticator/templates/configmap.yaml
# Copyright 2017 by the contributors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.---
apiVersion: v1
kind: ConfigMap
metadata:
  name: a2-aws-iam-authenticator
  labels:
    k8s-app: aws-iam-authenticator
data:
  config.yaml: ""
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: a2-aws-iam-authenticator
  labels:
    app.kubernetes.io/name: aws-iam-authenticator
    app.kubernetes.io/instance: a2
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: aws-iam-authenticator-v1.3.2
spec:
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: aws-iam-authenticator
      app.kubernetes.io/instance: a2
  template:
    metadata:
      labels:
        app.kubernetes.io/name: aws-iam-authenticator
        app.kubernetes.io/instance: a2
    spec:
      hostNetwork: true
      nodeSelector:
        node-role.kubernetes.io/master: ""
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
      - key: CriticalAddonsOnly
        operator: Exists
      containers:
      - name: aws-iam-authenticator
        image: "602401143452.dkr.ecr.us-west-2.amazonaws.com/amazon/aws-iam-authenticator:v0.4.0"
        args:
        - server
        - --config=/etc/aws-iam-authenticator/config.yaml
        - --state-dir=/var/aws-iam-authenticator/
        - --generate-kubeconfig=/etc/kubernetes/aws-iam-authenticator/kubeconfig.yaml
        - --kubeconfig-pregenerated=true

        resources:
          limits:
            cpu: 100m
            memory: 20Mi
          requests:
            cpu: 10m
            memory: 20Mi
        volumeMounts:
        - name: config
          mountPath: /etc/aws-iam-authenticator/
        - name: state
          mountPath: /var/aws-iam-authenticator/
        - name: output
          mountPath: /etc/kubernetes/aws-iam-authenticator/

      volumes:
      - name: config
        configMap:
          name: a2-aws-iam-authenticator
      - name: output
        hostPath:
          path: /srv/kubernetes/aws-iam-authenticator/
      - name: state
        hostPath:
          path: /srv/kubernetes/aws-iam-authenticator/
---
# Source: aws-iam-authenticator/templates/pod.yaml
apiVersion: v1
kind: Pod
metadata:
    name: "reckoner-test-hook-pod"
    annotations:
      helm.sh/hook: test-success
spec: {}
---
# Source: aws-iam-authenticator/templates/list1.yaml
apiVersion: v1
kind: List
items:
  - apiVersion: monitoring.coreos.com/v1
    kind: ServiceMonitor
    metadata:
      name: external-dns
      namespace: prometheus-operator
      labels:
        app: prometheus-operator-prometheus
        chart: prometheus-operator-8.13.4
        release: "prometheus-operator"
        heritage: "Helm"
    spec:
      endpoints:
        - port: http
      namespaceSelector:
        matchNames:
        - external-dns
      selector:
        matchLabels:
          app.kubernetes.io/name: external-dns
---
# Source: aws-iam-authenticator/templates/list2.yaml
apiVersion: v1
kind: List
items:
  - apiVersion: monitoring.coreos.com/v1
    kind: ServiceMonitor
    metadata:
      name: external-dns2
      namespace: prometheus-operator
      labels:
        app: prometheus-operator-prometheus
        chart: prometheus-operator-8.13.4
        release: "prometheus-operator"
        heritage: "Helm"
    spec:
      endpoints:
        - port: http
      namespaceSelector:
        matchNames:
        - external-dns2
      selector:
        matchLabels:
          app.kubernetes.io/name: external-dns2
---
# Source test-service
apiVersion: v1
kind: Service
metadata:
  name: reckoner-test-service
spec:
  type: NodePort
  ports:
    - port: 80
      targetPort: 4141
      protocol: TCP
      name: reckoner
  selector:
    app: reckoner
    release: reckoner
